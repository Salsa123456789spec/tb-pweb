generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model diskusi {
  id             Int         @id @default(autoincrement())
  pendaftaran_id Int
  pesan          String
  waktu          DateTime
  pendaftaran    pendaftaran @relation(fields: [pendaftaran_id], references: [id], map: "Diskusi_pendaftaran_id_fkey")

  @@index([pendaftaran_id], map: "Diskusi_pendaftaran_id_fkey")
}

model faq {
  id         Int    @id @default(autoincrement())
  pertanyaan String
  jawaban    String
}

model feedback_kuisioner {
  id                          Int         @id @default(autoincrement())
  pendaftaran_id              Int         @unique(map: "Feedback_Kuisioner_pendaftaran_id_key")
  kejelasan_soal              Int
  alokasi_waktu               Int
  kondisi_ruangan             Int
  profesionalisme_pewawancara Int
  bimbingan_arahan            Int
  supervisi                   Int
  kualitas_mentoring          Int
  proses_keseluruhan          Int
  saran                       String?
  kesan_pesan                 String?
  pendaftaran                 pendaftaran @relation(fields: [pendaftaran_id], references: [id], map: "Feedback_Kuisioner_pendaftaran_id_fkey")
}

model jadwalwawancara {
  id             Int              @id @default(autoincrement())
  pendaftaran_id Int              @unique(map: "JadwalWawancara_pendaftaran_id_key")
  waktu          DateTime
  pewawancara    String?
  kontak_pewwc   Int?
  ruang          String?
  tanggal        DateTime?
  pendaftaran    pendaftaran      @relation(fields: [pendaftaran_id], references: [id], map: "JadwalWawancara_pendaftaran_id_fkey")
  komplainjadwal komplainjadwal[]
}

model kehadiran {
  id             Int              @id @default(autoincrement())
  pendaftaran_id Int
  pertemuan      Int
  tanggal        DateTime
  status         kehadiran_status
  pembahasan     String?   @db.Text
  pendaftaran    pendaftaran      @relation(fields: [pendaftaran_id], references: [id], map: "Kehadiran_pendaftaran_id_fkey")

  @@index([pendaftaran_id], map: "Kehadiran_pendaftaran_id_fkey")
}

model kelompok {
  id        Int      @id @default(autoincrement())
  nama      String
  deskripsi String?
  kuota     Int
  mentor    String?
  magang    magang[]
}

model kelulusan {
  id             Int         @id @default(autoincrement())
  pendaftaran_id Int         @unique(map: "Kelulusan_pendaftaran_id_key")
  nilai          Int
  divisi         String
  pendaftaran    pendaftaran @relation(fields: [pendaftaran_id], references: [id], map: "Kelulusan_pendaftaran_id_fkey")
}

model komplainjadwal {
  id                Int             @id @default(autoincrement())
  jadwal_id         Int
  alasan            String
  status            String          @default("menunggu")
  tanggal_pengajuan DateTime        @default(now())
  tanggal_diajukan  DateTime?
  waktu_diajukan    DateTime?
  jadwalwawancara   jadwalwawancara @relation(fields: [jadwal_id], references: [id], map: "KomplainJadwal_jadwal_id_fkey")

  @@index([jadwal_id], map: "KomplainJadwal_jadwal_id_fkey")
}

model magang {
  id             Int         @id @default(autoincrement())
  pendaftaran_id Int         @unique(map: "Magang_pendaftaran_id_key")
  kelompok_id    Int
  mulai          DateTime?
  selesai        DateTime?
  kelompok       kelompok    @relation(fields: [kelompok_id], references: [id], map: "Magang_kelompok_id_fkey")
  pendaftaran    pendaftaran @relation(fields: [pendaftaran_id], references: [id], map: "Magang_pendaftaran_id_fkey")

  @@index([kelompok_id], map: "Magang_kelompok_id_fkey")
}

model materi {
  id             Int      @id @default(autoincrement())
  user_id        Int
  judul          String
  file           String
  deskripsi      String?
  tanggal_upload DateTime @default(now())
  user           user     @relation(fields: [user_id], references: [id], map: "Materi_user_id_fkey")

  @@index([user_id], map: "Materi_user_id_fkey")
}

model pendaftaran {
  id                    Int                 @id @default(autoincrement())
  user_id               Int                 @unique(map: "Pendaftaran_user_id_key")
  domisili              String
  asal                  String
  nomor_whatsapp        String
  divisi                String
  CV_file               String
  KRS_file              String
  KHS_file              String
  surat_permohonan_file String
  alasan                String?
  pernyataan            Boolean
  status                pendaftaran_status  @default(menunggu)
  diskusi               diskusi[]
  feedback_kuisioner    feedback_kuisioner?
  jadwalwawancara       jadwalwawancara?
  kehadiran             kehadiran[]
  kelulusan             kelulusan?
  magang                magang?
  user                  user                @relation(fields: [user_id], references: [id], map: "Pendaftaran_user_id_fkey")
  pengumpulantugas      pengumpulantugas[]
  pengumuman            pengumuman?
}

model pengumpulantugas {
  id             Int         @id @default(autoincrement())
  tugas_id       Int
  pendaftaran_id Int
  file           String
  tanggal_kumpul DateTime    @default(now())
  pendaftaran    pendaftaran @relation(fields: [pendaftaran_id], references: [id], map: "PengumpulanTugas_pendaftaran_id_fkey")
  tugas          tugas       @relation(fields: [tugas_id], references: [id], map: "PengumpulanTugas_tugas_id_fkey")
  penilaian      penilaian?

  @@index([pendaftaran_id], map: "PengumpulanTugas_pendaftaran_id_fkey")
  @@index([tugas_id], map: "PengumpulanTugas_tugas_id_fkey")
}

model pengumuman {
  id             Int                  @id @default(autoincrement())
  pendaftaran_id Int                  @unique(map: "Pengumuman_pendaftaran_id_key")
  tahapan        pengumuman_tahapan?
  user_id        Int?
  pendaftaran    pendaftaran          @relation(fields: [pendaftaran_id], references: [id], map: "Pengumuman_pendaftaran_id_fkey")
  user           user?                @relation(fields: [user_id], references: [id], map: "Pengumuman_user_id_fkey")

  @@index([user_id], map: "Pengumuman_user_id_fkey")
}

model penilaian {
  id                Int              @id @default(autoincrement())
  pengumpulan_id    Int              @unique(map: "Penilaian_pengumpulan_id_key")
  nilai             Int
  feedback          String?
  pengumpulantugas pengumpulantugas @relation(fields: [pengumpulan_id], references: [id], map: "Penilaian_pengumpulan_id_fkey")
}

model tugas {
  id                Int                @id @default(autoincrement())
  judul             String
  deskripsi         String?
  deadline          DateTime
  pengumpulantugas pengumpulantugas[]
}

model user {
  id          Int          @id @default(autoincrement())
  nim         String       @unique(map: "User_nim_key")
  name        String
  email       String       @unique(map: "User_email_key")
  password    String
  role        user_role
  materi      materi[]
  pendaftaran pendaftaran?
  pengumuman  pengumuman[]
}

enum pengumuman_tahapan {
  tahap1
  tahap2
  tahap3
}

enum kehadiran_status {
  Hadir
  Tidak_Hadir
}

enum user_role {
  mahasiswa
  admin
  asisten_lab
}

enum pendaftaran_status {
  menunggu
  diterima
  ditolak
}