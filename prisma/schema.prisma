generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/dbpweb"
}

enum Role {
  mahasiswa
  admin
  asisten_lab
}

enum Status {
  menunggu
  diterima
  ditolak
}

enum Tahapan {
  tahap1
  tahap2
  tahap3
}

model User {
  id            Int            @id @default(autoincrement())
  nim           String?        @unique
  no_aslab      String?        @unique   
  name          String
  email         String         @unique
  password      String
  role          Role

  // Relasi balik ke Pendaftaran
  pendaftarans  Pendaftaran[]  @relation("UserToPendaftaran")
}

model Pendaftaran {
  id                      Int      @id @default(autoincrement())
  user_id                 Int
  domisili                String   @db.VarChar(100)
  asal                    String   @db.VarChar(100)
  nomor_whatsapp          String   @db.VarChar(20)
  divisi                  String   @db.VarChar(100)
  CV_file                 String   @db.VarChar(255)
  KRS_file                String   @db.VarChar(255)
  KHS_file                String   @db.VarChar(255)
  surat_permohonan_file   String   @db.VarChar(255)
  alasan                  String?  @db.Text
  pernyataan              Boolean
  status                  Status   @default(menunggu)

  user                    User     @relation("UserToPendaftaran", fields: [user_id], references: [id])
  jadwalWawancara         JadwalWawancara[]
  pengumumanPeserta       PengumumanPeserta[]
}

model Pewawancara {
  id         Int                @id @default(autoincrement())
  nama       String
  kontak     String

  jadwal     JadwalWawancara[] // Relasi ke JadwalWawancara
}

model JadwalWawancara {
  id              Int               @id @default(autoincrement())
  pendaftaran_id  Int
  waktu           DateTime
  ruang           String?
  tanggal         DateTime?

  pewawancara_id  Int?              // FK baru ke tabel Pewawancara

  pendaftaran     Pendaftaran       @relation(fields: [pendaftaran_id], references: [id])
  pewawancara     Pewawancara?      @relation(fields: [pewawancara_id], references: [id])
  komplain        KomplainJadwal[]
}

model KomplainJadwal {
  id                  Int       @id @default(autoincrement())
  jadwal_id           Int
  alasan              String
  status              String    @default("menunggu")
  tanggal_pengajuan   DateTime  @default(now())
  tanggal_diajukan    DateTime?
  waktu_diajukan      DateTime?

  jadwal              JadwalWawancara @relation(fields: [jadwal_id], references: [id])
}

model Pengumuman {
  id                Int       @id @default(autoincrement())
  tahapan           Tahapan
  isi               String    @db.Text
  tanggal_publikasi DateTime  @default(now())
  
  peserta           PengumumanPeserta[]
}

model PengumumanPeserta {
  id               Int       @id @default(autoincrement())
  pengumuman_id    Int
  pendaftaran_id   Int       
  
  pengumuman       Pengumuman @relation(fields: [pengumuman_id], references: [id], onDelete: Cascade)
  pendaftaran      Pendaftaran @relation(fields: [pendaftaran_id], references: [id], onDelete: Cascade)

  @@unique([pengumuman_id, pendaftaran_id])
}